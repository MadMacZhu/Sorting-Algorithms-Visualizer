{"version":3,"sources":["sortingAlgorithms/MergeSort.js","sortingAlgorithms/QuickSort.js","sortingAlgorithms/BubbleSort.js","sortingAlgorithms/HeapSort.js","SortingVisualizer/SortingVisualizer.js","App.js","serviceWorker.js","index.js"],"names":["GetMergeSortAnimations","array","animations","length","auxiliaryArray","slice","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","i","j","push","doMerge","GetQuickSortAnimations","arr","javaScriptSortedArray","sort","a","b","QuickSort","startingIdx","pivotIndex","pivot","Swap","console","log","arrayOne","arrayTwo","arraysAreEqual","temp","GetBubbleSortAnimations","BubbleSort","GetHeapSortAnimations","start","MakeHeap","end","max","DeleteHeap","SortingVisualizer","props","state","num","handleChange","bind","this","resetArray","event","target","name","value","number","parseInt","setState","newArray","randomIntFromInterval","arrayBars","document","getElementsByClassName","barOneIdx","barTwoIdx","barOneStyle","style","barTwoStyle","color","setTimeout","backgroundColor","newWidth","width","barTwoNewWidth","barOneNewWidth","heapSortedArray","className","onChange","onClick","mergeSort","quickSort","heapSort","bubbleSort","testSortingAlgorithms","map","idx","key","height","parseFloat","margin","React","Component","min","random","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.78a00e87.chunk.js","sourcesContent":["export function GetMergeSortAnimations(array) {\r\n  const animations = [];\r\n  if (array.length <= 1) return array;\r\n  const auxiliaryArray = array.slice();\r\n  mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\r\n  return animations;\r\n}\r\n\r\nfunction mergeSortHelper(\r\n  mainArray,\r\n  startIdx,\r\n  endIdx,\r\n  auxiliaryArray,\r\n  animations,\r\n) {\r\n  if (startIdx === endIdx) return;\r\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\r\n  mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\r\n  mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\r\n  doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\r\n}\r\n\r\nfunction doMerge(\r\n  mainArray,\r\n  startIdx,\r\n  middleIdx,\r\n  endIdx,\r\n  auxiliaryArray,\r\n  animations,\r\n) {\r\n  let k = startIdx;\r\n  let i = startIdx;\r\n  let j = middleIdx + 1;\r\n  while (i <= middleIdx && j <= endIdx) {\r\n    // 这些是我们目前需要比较的数字，把它们推送到animations里面以便于之后用\r\n    // css来实现动画效果。\r\n    animations.push([i, j]);\r\n    // 第二次推送所比较的两个数字的序号，目的是交换它们的颜色。\r\n    // time to revert their color.\r\n    animations.push([i, j]);\r\n    if (auxiliaryArray[i] <= auxiliaryArray[j]) {\r\n      // 用原序列的数覆盖掉附加序列中的数字。\r\n      animations.push([k, auxiliaryArray[i]]);\r\n      mainArray[k++] = auxiliaryArray[i++];\r\n    } else {\r\n      // 用附加序列中的的序号为j数字替换掉原序列中序号为k的数字。\r\n      animations.push([k, auxiliaryArray[j]]);\r\n      mainArray[k++] = auxiliaryArray[j++];\r\n    }\r\n  }\r\n  while (i <= middleIdx) {\r\n    animations.push([i, i]);\r\n    animations.push([i, i]);\r\n    animations.push([k, auxiliaryArray[i]]);\r\n    mainArray[k++] = auxiliaryArray[i++];\r\n  }\r\n  while (j <= endIdx) {\r\n    animations.push([j, j]);\r\n    animations.push([j, j]);\r\n    animations.push([k, auxiliaryArray[j]]);\r\n    mainArray[k++] = auxiliaryArray[j++];\r\n  }\r\n}\r\n","export function GetQuickSortAnimations(arr){\r\n\tconst animations = [];\r\n\tif(arr.length <= 1){\r\n\t\treturn animations;\r\n\t}\r\n\tconst javaScriptSortedArray = arr.slice().sort((a, b) => a - b);\r\n\tQuickSort(arr, 0, arr.length - 1, animations);\r\n\tconsole.log(arraysAreEqual(javaScriptSortedArray, arr));\r\n\treturn animations;\r\n}\r\n\r\nfunction QuickSort(\r\n\tarr, \r\n\tstartingIdx, \r\n\tendIdx, \r\n\tanimations){\r\n\tif(startingIdx >= endIdx){\r\n\t\treturn;\r\n\t}\r\n\tlet pivotIndex = startingIdx;\r\n\tlet i = startingIdx;\r\n\tlet pivot = endIdx;\r\n\twhile(i < endIdx){\r\n\t\tif(arr[i] <= arr[pivot]){\r\n\t\t\tanimations.push([i, pivotIndex]);\r\n\t\t\tanimations.push([i, pivotIndex]);\r\n\t\t\tanimations.push([arr[i], arr[pivotIndex]])\r\n\t\t\tSwap(arr, i, pivotIndex);\r\n\t\t\tpivotIndex++;\r\n\t\t\ti++;\r\n\t\t} else{\r\n\t\t\tanimations.push([i, i]);\r\n\t\t\tanimations.push([i, i]);\r\n\t\t\tanimations.push([arr[i], arr[i]]);\r\n\t\t\ti++;\r\n\t\t}\r\n\t}\r\n\tanimations.push([pivotIndex, pivot]);\r\n\tanimations.push([pivotIndex, pivot]);\r\n\tanimations.push([arr[pivotIndex], arr[pivot]]);\r\n\tSwap(arr, pivotIndex, pivot);\r\n\tQuickSort(arr, startingIdx, pivotIndex - 1, animations);\r\n\tQuickSort(arr, pivotIndex + 1, endIdx, animations);\r\n}\r\n\r\nfunction Swap(arr, i, j){\r\n\tconst temp = arr[i];\r\n\tarr[i] = arr[j];\r\n\tarr[j] = temp;\r\n}\r\n\r\nfunction arraysAreEqual(arrayOne, arrayTwo) {\r\n  if (arrayOne.length !== arrayTwo.length) return false;\r\n  for (let i = 0; i < arrayOne.length; i++) {\r\n    if (arrayOne[i] !== arrayTwo[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n","export function GetBubbleSortAnimations(arr){\r\n\tconst animations = [];\r\n\tif(arr.length <=1 ){\r\n\t\treturn animations;\r\n\t}\r\n\tBubbleSort(arr, 0, arr.length - 1, animations);\r\n\treturn animations;\r\n}\r\n\r\nfunction BubbleSort(\r\n\tarr,\r\n\tstartingIdx,\r\n\tendIdx,\r\n\tanimations){\r\n\tif(startingIdx === endIdx){\r\n\t\treturn;\r\n\t}\r\n\tlet i = startingIdx;\r\n\twhile(i < endIdx){\r\n\t\tif(arr[i] > arr[i + 1]){\r\n\t\t\tanimations.push([i, i + 1]);\r\n\t\t\tanimations.push([i, i + 1]);\r\n\t\t\tanimations.push([arr[i], arr[i + 1]]);\r\n\t\t\tSwap(arr, i, i + 1);\r\n\t\t\ti++;\r\n\t\t} else{\r\n\t\t\tanimations.push([i, i + 1]);\r\n\t\t\tanimations.push([i, i + 1]);\r\n\t\t\tanimations.push([arr[i + 1], arr[i]]);\r\n\t\t\ti++;\r\n\t\t}\r\n\t}\r\n\tBubbleSort(arr, startingIdx, endIdx - 1, animations); \r\n}\r\n\r\nfunction Swap(arr, i, j){\r\n\tconst temp = arr[i];\r\n\tarr[i] = arr[j];\r\n\tarr[j] = temp;\r\n}","export function GetHeapSortAnimations(arr){\r\n\tconst animations = [];\r\n\tif(arr.length <= 1){\r\n\t\treturn animations;\r\n\t}\r\n\tconst javaScriptSortedArray = arr.slice().sort((a, b) => a - b);\r\n\tMakeHeap(arr, 0, animations);\r\n\tDeleteHeap(arr, 0, animations);\r\n\tconsole.log(arraysAreEqual(javaScriptSortedArray, arr));\r\n\treturn animations;\r\n}\r\n\r\nfunction MakeHeap(arr, start, animations){\r\n\tfor(var j = start + 1; j < arr.length; j++)\r\n\t{\r\n\t\tlet i = j;\r\n\t\twhile(i > 0 && arr[i] > arr[Math.floor((i-1)/2)])\r\n\t\t{\r\n\t\t\tanimations.push([Math.floor((i-1)/2), i]);\r\n\t\t\tanimations.push([Math.floor((i-1)/2), i]);\r\n\t\t\tanimations.push([arr[i], arr[Math.floor((i-1)/2)]]);\r\n\t\t\tSwap(arr, Math.floor((i-1)/2), i);\r\n\t\t\ti = Math.floor((i-1)/2);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction DeleteHeap(arr, start, animations){\r\n\tlet end = arr.length - 1;\r\n\twhile(end > start)\r\n\t{\r\n\t\tanimations.push([start, end]);\r\n\t\tanimations.push([start, end]);\r\n\t\tanimations.push([arr[end], arr[start]]);\r\n\t\tSwap(arr, start, end);\r\n\t\tend--;\r\n\t\tlet i = start;\r\n\t\twhile(2*i + 2 <= end \r\n\t\t\t&& arr[i] < Math.max(arr[2*i + 1], arr[2*i + 2]))\r\n\t\t{\r\n\t\t\tif(Math.max(arr[2*i + 1], arr[2*i + 2]) === arr[2*i + 1])\r\n\t\t\t{\r\n\t\t\t\tanimations.push([i, 2*i + 1]);\r\n\t\t\t\tanimations.push([i, 2*i + 1]);\r\n\t\t\t\tanimations.push([arr[2*i + 1], arr[i]]);\r\n\t\t\t\tSwap(arr, i, 2*i + 1);\r\n\t\t\t\ti = 2*i + 1;\r\n\t\t\t} else{\r\n\t\t\t\tanimations.push([i, 2*i + 2]);\r\n\t\t\t\tanimations.push([i, 2*i + 2]);\r\n\t\t\t\tanimations.push([arr[2*i + 2], arr[i]]);\r\n\t\t\t\tSwap(arr, i, 2*i + 2);\r\n\t\t\t\ti = 2*i + 2;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(2*i + 1 ===  end && arr[i] < arr[2*i + 1])\r\n\t\t{\r\n\t\t\t\tanimations.push([i, 2*i + 1]);\r\n\t\t\t\tanimations.push([i, 2*i + 1]);\r\n\t\t\t\tanimations.push([arr[2*i + 1], arr[i]]);\r\n\t\t\t\tSwap(arr, i, 2*i + 1);\t\t\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction Swap(arr, i, j){\r\n\tconst temp = arr[i];\r\n\tarr[i] = arr[j];\r\n\tarr[j] = temp;\r\n}\r\n\r\nfunction arraysAreEqual(arrayOne, arrayTwo) {\r\n  if (arrayOne.length !== arrayTwo.length) return false;\r\n  for (let i = 0; i < arrayOne.length; i++) {\r\n    if (arrayOne[i] !== arrayTwo[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n","import React from \"react\";\r\nimport { GetMergeSortAnimations } from \"../sortingAlgorithms/MergeSort.js\";\r\nimport { GetQuickSortAnimations } from \"../sortingAlgorithms/QuickSort.js\";\r\nimport { GetBubbleSortAnimations } from \"../sortingAlgorithms/BubbleSort.js\";\r\nimport { GetHeapSortAnimations } from \"../sortingAlgorithms/HeapSort.js\";\r\nimport \"./Header.css\"\r\nimport \"./SortingVisualizer.css\";\r\n\r\n// 可以通过修改这个数字来改变动画的快慢。\r\nconst ANIMATION_SPEED_MS = 5;\r\n\r\n// 这是代表数组的横条的主颜色。\r\nconst PRIMARY_COLOR = \"blue\";\r\n\r\n// 当两个横条的长度在算法过程中被对比时会变成如下颜色。\r\nconst SECONDARY_COLOR = \"red\";\r\n\r\nexport default class SortingVisualizer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      array: [],\r\n      num: 0,\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.resetArray();\r\n  }\r\n\r\n  handleChange(event) {\r\n    const { name, value } = event.target;\r\n    const number = parseInt(value, 10);\r\n    this.setState({ [name]: number });\r\n  }\r\n\r\n  resetArray() {\r\n    const newArray = [];\r\n    for (let i = 0; i < this.state.num; i++) {\r\n      newArray.push(randomIntFromInterval(5, 1000));\r\n    }\r\n    this.setState({ array: newArray });\r\n  }\r\n\r\n  mergeSort() {\r\n    const animations = GetMergeSortAnimations(this.state.array);\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n      const isColorChange = i % 3 !== 2;\r\n      if (isColorChange) {\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      } else {\r\n        setTimeout(() => {\r\n          const [barOneIdx, newWidth] = animations[i];\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          barOneStyle.width = `${newWidth / 10}%`;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      }\r\n    }\r\n  }\r\n\r\n  quickSort() {\r\n    const animations = GetQuickSortAnimations(this.state.array);\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n      const isColorChange = i % 3 !== 2;\r\n      if (isColorChange) {\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      } else {\r\n        setTimeout(() => {\r\n          const [barOneIdx, barTwoIdx] = animations[i - 1];\r\n          const [barTwoNewWidth, barOneNewWidth] = animations[i];\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          const barTwoStyle = arrayBars[barTwoIdx].style;\r\n          barOneStyle.width = `${barOneNewWidth / 10}%`;\r\n          barTwoStyle.width = `${barTwoNewWidth / 10}%`;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      }\r\n    }\r\n  }\r\n\r\n  heapSort() {\r\n    const animations = GetHeapSortAnimations(this.state.array);\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n      const isColorChange = i % 3 !== 2;\r\n      if (isColorChange) {\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      } else {\r\n        setTimeout(() => {\r\n          const [barOneIdx, barTwoIdx] = animations[i - 1];\r\n          const [barOneNewWidth, barTwoNewWidth] = animations[i];\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          const barTwoStyle = arrayBars[barTwoIdx].style;\r\n          barOneStyle.width = `${barOneNewWidth / 10}%`;\r\n          barTwoStyle.width = `${barTwoNewWidth / 10}%`;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      }\r\n    }\r\n  }\r\n\r\n  bubbleSort() {\r\n    const animations = GetBubbleSortAnimations(this.state.array);\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n      const isColorChange = i % 3 !== 2;\r\n      if (isColorChange) {\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      } else {\r\n        setTimeout(() => {\r\n          const [barOneIdx, barTwoIdx] = animations[i - 1];\r\n          const [barTwoNewWidth, barOneNewWidth] = animations[i];\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          const barTwoStyle = arrayBars[barTwoIdx].style;\r\n          barOneStyle.width = `${barOneNewWidth / 10}%`;\r\n          barTwoStyle.width = `${barTwoNewWidth / 10}%`;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      }\r\n    }\r\n  }\r\n\r\n  testSortingAlgorithms() {\r\n    for (let i = 0; i < 100; i++) {\r\n      const array = [];\r\n      const length = randomIntFromInterval(1, 1000);\r\n      for (let i = 0; i < length; i++) {\r\n        array.push(randomIntFromInterval(-1000, 1000));\r\n      }\r\n      const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\r\n      const heapSortedArray = GetHeapSortAnimations(array.slice());\r\n      console.log(arraysAreEqual(javaScriptSortedArray, heapSortedArray));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { array } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"buttons\">\r\n            <select name=\"num\" onChange={this.handleChange} className=\"select\">\r\n              <option value=\"0\">--Selet Number of Bars--</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n              <option value=\"100\">100</option>\r\n              <option value=\"150\">150</option>\r\n            </select>\r\n            <button className=\"btn btn-primary btn-lg\" onClick={() => this.resetArray()}>\r\n              Generate New Array\r\n            </button>\r\n            <button className=\"btn btn-primary btn-lg\" onClick={() => this.mergeSort()}>\r\n              Merge Sort\r\n            </button>\r\n            <button className=\"btn btn-primary btn-lg\" onClick={() => this.quickSort()}>\r\n              Quick Sort\r\n            </button>\r\n            <button className=\"btn btn-primary btn-lg\" onClick={() => this.heapSort()}>\r\n              Heap Sort\r\n            </button>\r\n            <button className=\"btn btn-primary btn-lg\" onClick={() => this.bubbleSort()}>\r\n              Bubble Sort\r\n            </button>\r\n            <button\r\n              className=\"btn btn-primary btn-lg\"\r\n              onClick={() => this.testSortingAlgorithms()}\r\n            >\r\n              Test Algorithm\r\n            </button>    \r\n        </div>\r\n        <div className=\"array-container\">\r\n          {array.map((value, idx) => (\r\n            <div\r\n              className=\"array-bar\"\r\n              key={idx}\r\n              style={{\r\n                backgroundColor: PRIMARY_COLOR,\r\n                width: `${value/10}%`,\r\n                height: `${parseFloat(100) / parseFloat(array.length) * 0.8}%`,\r\n                margin: `${parseFloat(100) / parseFloat(array.length) * 0.1}% 0`\r\n              }}\r\n            ></div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// 来自于： https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\r\nfunction randomIntFromInterval(min, max) {\r\n  // 包含极小值和极大值\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nfunction arraysAreEqual(arrayOne, arrayTwo) {\r\n  if (arrayOne.length !== arrayTwo.length) return false;\r\n  for (let i = 0; i < arrayOne.length; i++) {\r\n    if (arrayOne[i] !== arrayTwo[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n","import React from \"react\";\r\nimport SortingVisualizer from \"./SortingVisualizer/SortingVisualizer.js\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <SortingVisualizer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}